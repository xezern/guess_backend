// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum eUser {
  ADMIN
  USER
}

enum eGender {
  MALE
  FEMALE
  OTHER
  GAY
  TRANS
}

model Cart {
  id         Int     @id @default(autoincrement())
  user_id    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  product_id Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
  color      eColors 
  size       eSize   
  
  count      Int     @default(1)
}

model User {
  id       Int       @id @default(autoincrement())
  username String
  email    String
  user_img String?   @default("https://i.pinimg.com/originals/1f/28/c6/1f28c68d2c35f389966b5a363b992d06.png")
  name     String
  phone    String
  address  String?
  dob      DateTime?
  gender   eGender
  password String
  cart     Cart[]
  role     eUser     @default(USER)

  @@unique([username, phone, email])
}

model Product {
  id            Int          @id @default(autoincrement())
  name          String
  description   String
  discount      Int
  price         Float
  images        String[]
  category      Category     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    Int
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId Int?
  brands        Brands       @relation(fields: [brandsId], references: [id], onDelete: Cascade)
  brandsId      Int
  colors        eColors[]    @default([])
  size          eSize[]      @default([])
  createdTime   DateTime     @default(now())
  updatedTime   DateTime     @updatedAt
  Cart          Cart[]

  @@index([name, description])
}

model Brands {
  id      Int       @id @default(autoincrement())
  name    String
  slug    String
  product Product[]

  @@unique([name, slug])
}

enum eColors {
  RED
  GREEN
  BLUE
  YELLOW
  BLACK
  WHITE
  ORANGE
  PURPLE
  INDIGO
  VIOLET
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  slug        String
  product     Product[]
  subcategory Subcategory[]

  @@index([name])
}

model Subcategory {
  id         Int       @id @default(autoincrement())
  name       String
  slug       String
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  Product    Product[]

  @@index([name])
}

enum eSize {
  L
  M
  S
  XL
  XXL
}
